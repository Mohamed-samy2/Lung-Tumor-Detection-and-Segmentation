# -*- coding: utf-8 -*-
"""DetectionScript.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DaKBhQDQ60xmRmgPMj892U1-vkSDSqzR
"""

from ultralytics import YOLO
import cv2
import matplotlib.pyplot as plt
from ..BaseModel import BaseModel
import os

class YoloDetection(BaseModel):
    def __init__(self):
        self.weights_path = os.path.join(os.path.dirname( os.path.abspath(__file__)),'best.pt')
        self.model = YOLO(self.weights_path)
    
    def run(self, img,threshold=0.30 , resize_dim=(256, 256)):
        
        img_path = self._image_preprocessing(img)
        result = self.model(source=img_path, conf=threshold, save=False)[0]
        os.remove(img_path)
        
        bounding_boxes, resized_cropped_tumors,tumor_count,tumor_scores = self._get_object_count(result , img , resize_dim)
        return result.plot(), bounding_boxes, resized_cropped_tumors, tumor_count,tumor_scores
    
    
    def _get_object_count(self, result , img , resize_dim):
        
        bounding_boxes = []
        resized_cropped_tumors = []
        tumor_count = 0
        tumor_scores = []
        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        for box in result.boxes:
            class_id = int(box.cls[0])
            if class_id == 1:
                tumor_count += 1

                xmin, ymin, xmax, ymax = map(int, box.xyxy[0].tolist())
                
                bounding_boxes.append((xmin, ymin, xmax, ymax))
                
                score = float(box.conf[0])  # Access the confidence score
                tumor_scores.append(score)
                
                cropped_tumor = img[ymin:ymax, xmin:xmax]
                cropped_tumor = cv2.cvtColor(cropped_tumor, cv2.COLOR_BGR2GRAY)
                resized_tumor = cv2.resize(cropped_tumor, resize_dim, interpolation=cv2.INTER_AREA)
                resized_cropped_tumors.append(resized_tumor)
                
        return bounding_boxes, resized_cropped_tumors, tumor_count , tumor_scores
    
    def _image_preprocessing(self, img):
        
        temp_image_path = "temp_image.jpg"
        cv2.imwrite(temp_image_path, cv2.cvtColor(img, cv2.COLOR_RGB2BGR))
        
        return temp_image_path


if __name__ == "__main__":
    
    img = cv2.imread(r"E:\Computer Vision Project\Lung-Tumor-Detection-and-Segmentation-\Data\val\images\Subject_60\49.png", cv2.IMREAD_GRAYSCALE)

    
    Yolo = YoloDetection()
    annotated_image, bounding_boxes, resized_cropped_tumors, tumor_count = Yolo.run(img)
    
    print(bounding_boxes, resized_cropped_tumors, tumor_count)
    
    plt.figure(figsize=(8, 8))
    plt.imshow(resized_cropped_tumors[0])
    plt.axis("off")
    plt.title("Annotated Image")
    plt.show()
    
    # input_image = cv2.cvtColor(input_image, cv2.COLOR_BGR2RGB)  # Convert to RGB

    # annotated_image, bounding_boxes, tumor_count, resized_cropped_tumors = process_and_plot_image(input_image, conf_threshold=0.2)

    # print(f"Number of Tumors Detected: {tumor_count}")
    # print(f"Bounding Boxes: {bounding_boxes}")